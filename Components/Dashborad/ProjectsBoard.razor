@page "/projects"
@using MudBlazor
@inject NavigationManager NavigationManager

<MudHidden Breakpoint="Breakpoint.SmAndDown">
    <div class="projects-desktop">
        <!-- SIDEBAR -->
        <div class="sidebar-container">
            <ProjectsSidebar />
        </div>
        <!-- BOARD -->
        <div class="board-container org-scroll">
            <MudGrid GutterSize="1"
                     Style="width:100%;max-width:960px;margin:0 auto;"
                     Justify="Justify.Center">
                @foreach (var card in Cards)
                {
                    var isTasks = card.Title == "Tasks";
                    <MudItem xs="12" sm="@(isTasks ? 12 : 4)">
                        <div @onclick="() => OnCardClick(card)"
                             class="project-card @(card.IsClickable ? "clickable" : "") @(isTasks ? "tasks" : "")">
                            <span style="
                                color:var(--mud-palette-text-primary);
                                font-weight:500;
                                font-size:1.125rem;
                                display:inline-flex;
                                align-items:center;
                                white-space:nowrap;
                                overflow:hidden;
                                text-overflow:ellipsis;
                                max-width:100%;">
                                @card.Title&nbsp;
                                <span style="font-weight:700;">
                                    (<span>@card.Total</span>,
                                    <span style="color:var(--mud-palette-error);font-weight:700;">@card.Delayed</span>)
                                </span>
                            </span>
                        </div>
                    </MudItem>
                }
            </MudGrid>
        </div>
    </div>
</MudHidden>

<MudHidden Breakpoint="Breakpoint.MdAndUp">
    <div class="projects-mobile">
        <!-- SIDEBAR -->
        <div class="sidebar-container">
            <ProjectsSidebar />
        </div>
        <!-- BOARD -->
        <div class="board-container org-scroll">
            <MudGrid GutterSize="1"
                     Style="width:100%;max-width:960px;margin:0 auto;"
                     Justify="Justify.Center">
                @foreach (var card in Cards)
                {
                    var isTasks = card.Title == "Tasks";
                    <MudItem xs="12" sm="@(isTasks ? 12 : 4)">
                        <div @onclick="() => OnCardClick(card)"
                             class="project-card @(card.IsClickable ? "clickable" : "") @(isTasks ? "tasks" : "")">
                            <span style="
                                color:var(--mud-palette-text-primary);
                                font-weight:500;
                                font-size:1.125rem;
                                display:inline-flex;
                                align-items:center;
                                white-space:nowrap;
                                overflow:hidden;
                                text-overflow:ellipsis;
                                max-width:100%;">
                                @card.Title&nbsp;
                                <span style="font-weight:700;">
                                    (<span>@card.Total</span>,
                                    <span style="color:var(--mud-palette-error);font-weight:700;">@card.Delayed</span>)
                                </span>
                            </span>
                        </div>
                    </MudItem>
                }
            </MudGrid>
        </div>
    </div>
</MudHidden>

@code {
    class CardInfo
    {
        public string Title { get; set; } = "";
        public int Total { get; set; }
        public int Delayed { get; set; }
        public bool IsClickable { get; set; }
        public string NavigateTo { get; set; } = "";
    }

    private List<CardInfo> Cards = new()
    {
        new() { Title = "Alerts",     Total = 3,  Delayed = 0, IsClickable = false },
        new() { Title = "Follow Up",  Total = 8,  Delayed = 2, IsClickable = false },
        new() { Title = "Comments",   Total = 13, Delayed = 5, IsClickable = false },
        new() { Title = "Tasks",      Total = 23, Delayed = 8, IsClickable = true,  NavigateTo = "/tasks" },
        new() { Title = "Meetings",   Total = 6,  Delayed = 2, IsClickable = false },
        new() { Title = "Issues",     Total = 10, Delayed = 9, IsClickable = false },
        new() { Title = "Letters",    Total = 8,  Delayed = 2, IsClickable = false },
    };

    private void OnCardClick(CardInfo card)
    {
        if (card.IsClickable && !string.IsNullOrEmpty(card.NavigateTo))
            NavigationManager.NavigateTo(card.NavigateTo);
    }
}
